apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-frontend-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    error_log /dev/stderr notice;
    access_log /dev/stdout;

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        server_tokens off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
          text/plain
          text/css
          text/xml
          text/javascript
          application/javascript
          application/xml+rss
          application/json;

        # Proxy /api calls to the backend ingress
        location /api/ {
          proxy_pass https://monitoring-backend.duckdns.org/api/;
          proxy_ssl_server_name on;
          proxy_ssl_verify off;

          proxy_set_header Host monitoring-backend.duckdns.org;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_connect_timeout 30s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          # CORS support (in case needed)
          add_header Access-Control-Allow-Origin * always;
          add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
          add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

          # Handle preflight OPTIONS
          if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
          }
        }

        # Angular HTML5 routing fallback
        location / {
          try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|eot|ttf)$ {
          expires 1y;
          add_header Cache-Control "public, immutable";
        }

        # Health check
        location /health {
          access_log off;
          return 200 "healthy\n";
          add_header Content-Type text/plain;
        }
      }
    }
