/* src/components/resource-dashboard/resource-dashboard.component.scss */

// Variables for consistent theming
$border-radius: 12px;
$shadow-light: 0 2px 8px rgba(0, 0, 0, 0.08);
$shadow-medium: 0 4px 16px rgba(0, 0, 0, 0.12);
$shadow-heavy: 0 8px 32px rgba(0, 0, 0, 0.15);
$transition-speed: 0.3s;
$breakpoint-tablet: 1024px;
$breakpoint-mobile: 768px;

// Color palette
$primary-color: #3f51b5;
$success-color: #10b981;
$warning-color: #f59e0b;
$error-color: #ef4444;
$text-primary: #1f2937;
$text-secondary: #6b7280;
$background-light: #f8fafc;
$border-color: #e5e7eb;

// Main card styling
.mat-card {
  border-radius: $border-radius;
  box-shadow: $shadow-medium;
  border: 1px solid $border-color;
  overflow: hidden;
  
  .mat-card-header {
    padding: 24px 24px 20px;
    background: linear-gradient(135deg, $background-light 0%, #ffffff 100%);
    border-bottom: 1px solid $border-color;
    
    .mat-card-title {
      font-size: 1.75rem;
      font-weight: 600;
      color: $text-primary;
      margin-bottom: 8px;
      display: flex;
      align-items: center;
      gap: 12px;
      
      &::before {
        content: "‚öôÔ∏è";
        font-size: 1.5rem;
      }
    }
    
    .mat-card-subtitle {
      font-size: 0.9rem;
      color: $text-secondary;
      font-weight: 400;
    }
  }
}

// Controls section
.controls {
  display: flex;
  align-items: center;
  margin: 0;
  padding: 20px 24px;
  background-color: $background-light;
  border-bottom: 1px solid $border-color;
  gap: 16px;
  flex-wrap: wrap;
  
  mat-form-field {
    min-width: 200px;
    margin: 0;
    
    .mat-form-field-wrapper {
      margin: 0;
    }
    
    .mat-form-field-outline {
      border-radius: 8px;
      border-width: 1px;
    }
    
    &.search-field {
      min-width: 280px;
      flex: 1;
      
      @media (max-width: $breakpoint-tablet) {
        min-width: 200px;
      }
    }
  }
  
  .spacer {
    flex: 1;
    
    @media (max-width: $breakpoint-mobile) {
      display: none;
    }
  }
  
  .control-buttons {
    display: flex;
    gap: 8px;
    
    button {
      transition: all $transition-speed cubic-bezier(0.4, 0, 0.2, 1);
      border-radius: 8px;
      width: 40px;
      height: 40px;
      
      &:hover:not(:disabled) {
        transform: translateY(-1px);
        box-shadow: $shadow-light;
      }
      
      &:active:not(:disabled) {
        transform: translateY(0);
      }
      
      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }
      
      &.auto-refresh-active {
        background: linear-gradient(135deg, $primary-color 0%, lighten($primary-color, 10%) 100%);
        color: white;
        
        mat-icon {
          animation: pulse 2s ease-in-out infinite;
        }
      }
    }
  }
  
  @media (max-width: $breakpoint-mobile) {
    padding: 16px;
    gap: 12px;
    
    mat-form-field {
      min-width: 100%;
    }
    
    .control-buttons {
      width: 100%;
      justify-content: center;
    }
  }
}

// Loading spinner
.loading-spinner {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 60px 20px;
  
  mat-spinner {
    circle {
      stroke: $primary-color;
    }
  }
}

// Tab styling
.mat-tab-group {
  .mat-tab-header {
    border-bottom: 1px solid $border-color;
    margin: 0 24px;
    
    .mat-tab-label {
      font-weight: 500;
      padding: 0 24px;
      min-width: 140px;
      height: 56px;
      opacity: 1;
      color: $text-secondary;
      transition: all $transition-speed ease;
      
      &.mat-tab-label-active {
        color: $primary-color;
        font-weight: 600;
        
        .tab-icon {
          color: $primary-color;
          transform: scale(1.1);
        }
      }
      
      &:hover:not(.mat-tab-label-active) {
        color: $text-primary;
        background-color: rgba($primary-color, 0.04);
      }
    }
  }
  
  .mat-tab-body-wrapper {
    padding: 0;
  }
  
  .mat-tab-body {
    padding: 24px;
    
    @media (max-width: $breakpoint-mobile) {
      padding: 16px;
    }
  }
}

// Table container and styling - FIXED ALIGNMENT SYSTEM
.table-container {
  overflow-x: auto;
  border-radius: $border-radius;
  border: 1px solid $border-color;
  background: white;
  position: relative;
  
  // Custom scrollbar
  &::-webkit-scrollbar {
    height: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 3px;
    
    &:hover {
      background: #a8a8a8;
    }
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed; // Ensures consistent column widths
    
    .mat-header-row {
      background: linear-gradient(135deg, $background-light 0%, #f8fafc 100%);
      
      .mat-header-cell {
        font-weight: 600;
        color: $text-primary;
        border-bottom: 2px solid $border-color;
        padding: 16px 12px;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        height: 56px; // Fixed height for header
        vertical-align: middle;
        
        &:first-child {
          border-radius: $border-radius 0 0 0;
        }
        
        &:last-child {
          border-radius: 0 $border-radius 0 0;
        }
      }
    }
    
    // CRITICAL: Fixed row alignment system
    .mat-row {
      transition: all $transition-speed ease;
      border-bottom: 1px solid rgba($border-color, 0.5);
      height: 64px; // Fixed consistent height for all rows
      
      &:last-child {
        border-bottom: none;
      }
      
      &:hover {
        background-color: rgba($primary-color, 0.02);
        transform: translateX(2px);
      }
      
      // NUCLEAR OPTION: Force ALL cells to identical alignment
      .mat-cell {
        padding: 0 !important; // Remove all padding to eliminate variables
        font-size: 0.875rem;
        color: $text-primary;
        border-bottom: 1px solid rgba($border-color, 0.3);
        height: 64px !important;
        line-height: 64px !important; // Force line-height to match height exactly
        
        // ABSOLUTE positioning system - no flex fighting
        display: table-cell !important;
        vertical-align: middle !important;
        text-align: left !important;
        
        // Add padding through inner content wrapper
        > * {
          display: inline-flex !important;
          align-items: center !important;
          height: 64px !important;
          padding: 0 12px !important;
          margin: 0 !important;
          vertical-align: middle !important;
          line-height: normal !important;
        }
        
        &:last-child {
          border-right: none;
        }
      }
    }
  }
}

// Column-specific styling with consistent alignment
.mat-column-status {
  min-width: 100px;
  
  .mat-cell {
    justify-content: center !important;
  }
}

.mat-column-name {
  font-weight: 600;
  color: $primary-color;
  min-width: 180px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
  
  strong {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    
    &::before {
      content: "üì¶";
      font-size: 0.9em;
      opacity: 0.7;
    }
  }
}

.mat-column-namespace {
  min-width: 140px;
  color: $text-secondary;
  
  .mat-cell {
    justify-content: flex-start !important;
    
    &::before {
      content: "üè∑Ô∏è";
      margin-right: 6px;
      opacity: 0.6;
    }
  }
}

.mat-column-replicas,
.mat-column-available {
  font-weight: 600;
  min-width: 90px;
  font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
  
  .mat-cell {
    justify-content: center !important;
  }
}

.mat-column-age {
  min-width: 100px;
  font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
  color: $text-secondary;
  
  .mat-cell {
    justify-content: center !important;
  }
}

.mat-column-type {
  min-width: 120px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

.mat-column-clusterIP {
  font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
  font-size: 0.8rem;
  min-width: 140px;
  color: $text-secondary;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

.mat-column-ports {
  font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
  font-size: 0.8rem;
  min-width: 160px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

.mat-column-hosts {
  min-width: 220px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

.mat-column-paths {
  font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
  font-size: 0.8rem;
  min-width: 180px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

.mat-column-labels,
.mat-column-annotations {
  max-width: 250px;
  min-width: 200px;
  
  .mat-cell {
    justify-content: flex-start !important;
  }
}

// STATUS CELL - INHERITS CELL ALIGNMENT, JUST ADDS CONTENT STYLING
.status-cell {
  // DO NOT override display, align-items, or justify-content - let .mat-cell handle it
  gap: 8px;
  
  .status-icon {
    font-size: 20px;
    width: 20px;
    height: 20px;
    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  .health-bar {
    width: 60px;
    height: 6px;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
    overflow: hidden;
    flex-shrink: 0;
    
    .health-fill {
      height: 100%;
      border-radius: 3px;
      transition: width 0.3s ease;
      
      &.health-healthy {
        background: linear-gradient(90deg, $success-color, lighten($success-color, 10%));
      }
      
      &.health-warning {
        background: linear-gradient(90deg, $warning-color, lighten($warning-color, 10%));
      }
      
      &.health-critical {
        background: linear-gradient(90deg, $error-color, lighten($error-color, 10%));
      }
    }
  }
}

// AGE CELL - INHERITS CELL ALIGNMENT, JUST ADDS CONTENT STYLING  
.age-cell {
  // DO NOT override display, align-items, or justify-content - let .mat-cell handle it
  gap: 6px;
  font-size: 0.8rem;
  color: $text-secondary;
  font-weight: 500;
  
  .age-icon {
    font-size: 14px;
    width: 14px;
    height: 14px;
    opacity: 0.7;
    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  .age-text {
    white-space: nowrap;
  }
}

// Labels and annotations styling with perfect alignment
.mat-column-labels,
.mat-column-annotations {
  .mat-cell {
    padding: 8px 12px !important;
    align-items: flex-start !important;
    justify-content: flex-start !important;
  }
  
  span {
    display: inline-block;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
    font-size: 0.75rem;
    background: $background-light;
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid $border-color;
    color: $text-secondary;
    margin-top: 4px; // Center vertically within the cell
    
    &:hover {
      white-space: normal;
      word-break: break-all;
      overflow: visible;
      position: relative;
      z-index: 100;
      background: white;
      box-shadow: $shadow-heavy;
      border-color: $primary-color;
    }
  }
}

// Service type chips with perfect alignment
.service-type-chip {
  font-size: 0.75rem;
  height: 24px;
  background: rgba($primary-color, 0.1);
  color: $primary-color;
  border: 1px solid rgba($primary-color, 0.2);
  font-weight: 500;
  display: inline-flex !important;
  align-items: center !important;
  padding: 0 8px;
  border-radius: 4px;
}

// Host chips container with perfect alignment
.hosts-container {
  display: flex;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  
  .host-chip {
    font-size: 0.75rem;
    height: 22px;
    background: rgba($success-color, 0.1);
    color: darken($success-color, 10%);
    border: 1px solid rgba($success-color, 0.2);
    display: inline-flex !important;
    align-items: center !important;
    padding: 0 6px;
    border-radius: 4px;
  }
}

// Row status styling
.mat-row {
  transition: all 0.2s ease;
  
  &.row-critical {
    background: rgba($error-color, 0.03);
    border-left: 4px solid $error-color;
    
    &:hover {
      background: rgba($error-color, 0.06) !important;
    }
  }
  
  &.row-warning {
    background: rgba($warning-color, 0.03);
    border-left: 4px solid $warning-color;
    
    &:hover {
      background: rgba($warning-color, 0.06) !important;
    }
  }
  
  &.row-healthy {
    border-left: 4px solid $success-color;
    
    &:hover {
      background: rgba($success-color, 0.03) !important;
    }
  }
}

// Stats container
.stats-container {
  display: flex;
  gap: 32px;
  margin-top: 8px;
  flex-wrap: wrap;
  
  .stat-item {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
    color: $text-secondary;
    font-weight: 500;
    
    .stat-icon {
      font-size: 18px;
      width: 18px;
      height: 18px;
      opacity: 0.8;
    }
  }
  
  @media (max-width: $breakpoint-tablet) {
    gap: 20px;
    
    .stat-item {
      font-size: 0.85rem;
    }
  }
}

// Animations
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// Enhanced animations
.mat-row {
  animation: slideIn 0.4s ease-out;
}

.table-container {
  animation: fadeInUp 0.5s ease-out;
}

.rotating {
  animation: rotate 1s linear infinite;
}

// Tab enhancements
.tab-icon {
  margin-right: 8px;
  font-size: 18px;
  transition: all $transition-speed ease;
}

.resource-count {
  margin-left: 8px;
  
  .mat-badge-content {
    background: $primary-color;
    font-size: 0.7rem;
    font-weight: 600;
  }
}

// Empty state styling
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 24px;
  text-align: center;
  color: $text-secondary;
  
  mat-icon {
    font-size: 64px;
    width: 64px;
    height: 64px;
    margin-bottom: 20px;
    opacity: 0.3;
  }
  
  h3 {
    margin: 0 0 12px 0;
    font-weight: 500;
    color: $text-primary;
    font-size: 1.2rem;
  }
  
  p {
    margin: 0;
    font-size: 0.9rem;
    max-width: 300px;
    line-height: 1.5;
  }
}

// Text utilities
.text-warning {
  color: $warning-color !important;
  font-weight: 600;
}

.text-success {
  color: $success-color !important;
}

.text-error {
  color: $error-color !important;
}

// Responsive design
@media (max-width: $breakpoint-tablet) {
  .table-container {
    font-size: 0.85rem;
    
    .mat-header-cell,
    .mat-cell {
      padding: 12px 8px;
    }
    
    .mat-column-labels,
    .mat-column-annotations {
      max-width: 150px;
      min-width: 120px;
    }
  }
  
  .mat-tab-label {
    font-size: 0.85rem;
    padding: 0 16px !important;
    min-width: 100px !important;
  }
}

@media (max-width: $breakpoint-mobile) {
  .controls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .table-container {
    border-radius: 8px;
    
    table {
      min-width: 600px; // Force horizontal scroll on mobile
    }
  }
  
  .stats-container {
    gap: 16px;
    
    .stat-item {
      font-size: 0.8rem;
    }
  }
}

// Professional hover effects with perfect alignment
.mat-row:hover {
  .mat-cell {
    color: $text-primary;
  }
  
  .age-cell {
    color: $primary-color;
    
    .age-icon {
      opacity: 1;
      transform: scale(1.1);
    }
  }
}

// Enhanced focus states
mat-form-field.mat-focused {
  .mat-form-field-outline-thick {
    color: $primary-color;
  }
}

// Smooth transitions for all interactive elements
mat-form-field, button, .mat-tab-label, .mat-row {
  transition: all $transition-speed cubic-bezier(0.4, 0, 0.2, 1);
}

// Professional color coding for status icons
mat-icon[color="success"] {
  color: $success-color !important;
}

mat-icon[color="warn"] {
  color: $warning-color !important;
}

mat-icon[color="error"] {
  color: $error-color !important;
}